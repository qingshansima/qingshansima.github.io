(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{342:function(t,s,a){"use strict";a.r(s);var e=a(7),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h4",{attrs:{id:"_1-mysql和oracle的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-mysql和oracle的区别"}},[t._v("#")]),t._v(" 1.MySQL和Oracle的区别")]),t._v(" "),s("p",[t._v("MySQL是开源的项目，免费。中小企业首选MySQL，Oracle是Oracle公司推出的一款成熟的数据库产品是闭源同时也是收费的，但是Oracle官网是不限制下载的（只要你有账号）一般的开发测试是没问题。\nSQL语法的不同，MySQL较为灵活，Oracle较为严格（具体就是单引号，分页的处理，主键的自动增长）\n对于事务的支持。MySQL对于事务默认是不支持的，只有存储引擎innodb支持。而Oracle对于事务是完全支持。\n并发性。MySql默认表级锁，Oracle行级锁，所以oracle并发行高很多。")]),t._v(" "),s("h4",{attrs:{id:"_2-oracle中function和procedure的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-oracle中function和procedure的区别"}},[t._v("#")]),t._v(" 2.Oracle中function和procedure的区别？")]),t._v(" "),s("ol",[s("li",[t._v("函数function是存储过程的一种")]),t._v(" "),s("li",[t._v("函数可以没有参数,但是一定需要一个返回值，存储过程可以没有参数,不需要返回值")]),t._v(" "),s("li",[t._v("函数return返回值没有返回参数模式，存储过程通过out参数返回值, 如果需要返   回多个参数则建议使用存储过程")]),t._v(" "),s("li",[t._v("在sql数据操纵语句中只能调用函数而不能调用存储过程")])]),t._v(" "),s("h4",{attrs:{id:"_3-比较truncate和delete命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-比较truncate和delete命令"}},[t._v("#")]),t._v(" 3. 比较truncate和delete命令 ？")]),t._v(" "),s("ol",[s("li",[t._v("Truncate 和delete都可以将数据实体删掉，truncate 的操作并不记录到 rollback日志，所以操作速度较快，但同时这个数据不能恢复")]),t._v(" "),s("li",[t._v("Delete操作不腾出表空间的空间")]),t._v(" "),s("li",[t._v("Truncate 不能对视图等进行删除")]),t._v(" "),s("li",[t._v("Truncate是数据定义语言（DDL），而delete是数据操纵语言(DML)")])]),t._v(" "),s("h4",{attrs:{id:"_4-oralce中-rowid-rownum的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-oralce中-rowid-rownum的定义"}},[t._v("#")]),t._v(" 4.oralce中 rowid, rownum的定义")]),t._v(" "),s("ol",[s("li",[t._v("rowid和rownum都是伪列")]),t._v(" "),s("li",[t._v("rowid是物理地址，用于定位oracle中具体数据的物理存储位置")]),t._v(" "),s("li",[t._v("rownum则是sql的输出结果排序")])]),t._v(" "),s("h4",{attrs:{id:"_5-事务的特性-acid-是指什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-事务的特性-acid-是指什么"}},[t._v("#")]),t._v(" 5. 事务的特性（ACID）是指什么")]),t._v(" "),s("p",[t._v("事务是作为一个逻辑单元执行的一系列操作，一个逻辑工作单元必须有四个属性，称为 ACID(原子性、一致性、隔离性和持久性)属性。")]),t._v(" "),s("ol",[s("li",[t._v("原子性（Atomic）：事务中的各项操作，要么全做要么全不做，任何一项操作的失败都会导致整个事务的失败")]),t._v(" "),s("li",[t._v("一致性（Consistent）：事务结束后系统状态是一样的")]),t._v(" "),s("li",[t._v("隔离性（Isolated）：并发执行的事务彼此无法看到对方的中间状态")]),t._v(" "),s("li",[t._v("持久性（Durable）：事务完成后，即使发生灾难性的故障，通过日志和同步备份可以在故障发生后重建数据")])]),t._v(" "),s("h4",{attrs:{id:"_6-列举几种表连接方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-列举几种表连接方式"}},[t._v("#")]),t._v(" 6. 列举几种表连接方式")]),t._v(" "),s("p",[t._v("等值连接（内连接）、非等连接、自连接、外连接（左、右、全）")]),t._v(" "),s("p",[t._v("内连接又称等值连接，筛选完全匹配的行")]),t._v(" "),s("p",[t._v("左连接以左表为主，筛选完全匹配的行之外还会把左表中没有匹配的行也筛选，找不到匹配的数据用null填充")]),t._v(" "),s("p",[t._v("右连接以右表为主，筛选完全匹配的行之外还会把有表中没有匹配的行也帅选，找不到匹配的数据用null填充")]),t._v(" "),s("h4",{attrs:{id:"_7-描述oracle中tablespace和datafile之间的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-描述oracle中tablespace和datafile之间的关系"}},[t._v("#")]),t._v(" 7. 描述oracle中tablespace和datafile之间的关系")]),t._v(" "),s("p",[t._v("一个表空间可包含一个或多个数据文件。表空间利用增加或扩展数据文件扩大表空间，表空间的大小为组成该表空间的数据文件大小的和。一个datafile只能属于一个表空间;一个tablespace可以有一个或多个datafile,每个datafile只能在一个tablespace内, table中的数据,通过hash算法分布在tablespace中的各个datafile中,tablespace是逻辑上的概念,datafile则在物理上储存了数据库的种种对象。")]),t._v(" "),s("h4",{attrs:{id:"_8-什么是逻辑备份"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-什么是逻辑备份"}},[t._v("#")]),t._v(" 8. 什么是逻辑备份")]),t._v(" "),s("ol",[s("li",[t._v("逻辑备份(exp/imp)用于实现数据库对象的恢复。但不是基于时间点可完全恢复的备份策略。只能作为联机备份和脱机备份的一种补充。")]),t._v(" "),s("li",[t._v("完全逻辑备份\n完全逻辑备份是将整个数据库导出到一个数据库的格式文件中，该文件可以在不同的数据库版本、操作系统和硬件平台之间进行移植。")]),t._v(" "),s("li",[t._v("指定表的逻辑备份\n通过备份工具，可以将指定的数据库表备份出来，这可以避免完全逻辑备份所带来的时间和财力上的浪费。")])]),t._v(" "),s("h4",{attrs:{id:"_9-什么是物理备份"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-什么是物理备份"}},[t._v("#")]),t._v(" 9. 什么是物理备份")]),t._v(" "),s("p",[t._v("物理备份是最主要的备份方式。用于保证数据库在最小的数据库丢失或没有数据丢失的情况下得到恢复.物理备份分为热备份和冷备份")]),t._v(" "),s("ol",[s("li",[t._v("热备份：主要是指备份过程在数据库打开并且用户可以使用的情况下进行。需要执行热物理备份的情况有：由于数据库性质要求不间断工作，因而此时只能采用热物理备份。")]),t._v(" "),s("li",[t._v("冷备份：冷物理备份提供了最简单和最直接的方法保护数据库因物理损坏丢失。")])]),t._v(" "),s("p",[t._v("对一个已经存在大最数据量的数据库，在晚间数据库可以关闭，此时应用冷物理。")]),t._v(" "),s("p",[t._v("当对数据库服务器进行升级，（如更换硬盘），此时需要备份数据库信息需要采用冷备。")]),t._v(" "),s("h4",{attrs:{id:"_10-nvl与nvl2两个函数的使用方法和差别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-nvl与nvl2两个函数的使用方法和差别"}},[t._v("#")]),t._v(" 10. NVL与NVL2两个函数的使用方法和差别？")]),t._v(" "),s("ol",[s("li",[t._v("NVL (expr1, expr2)：expr1为NULL，返回expr2；不为NULL，返回expr1。注意两者的类型要一致")]),t._v(" "),s("li",[t._v("NVL2 (expr1, expr2, expr3) ：expr1不为NULL。返回expr2；为NULL，返回expr3。expr2和expr3类型不同的话。expr3会转换为expr2的类型")])]),t._v(" "),s("h4",{attrs:{id:"_11-union和union-all的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-union和union-all的区别"}},[t._v("#")]),t._v(" 11.union和union all的区别")]),t._v(" "),s("ol",[s("li",[t._v("UNION：由每一个查询 选择的 全部不反复的行组成。并集不包括反复值， 默认按第 1 个查询的第 1 列升序排列。")]),t._v(" "),s("li",[t._v("UNION ALL： 由每一个查询 选择的 全部的行。全然并集包括反复值。 不排序。")])]),t._v(" "),s("h4",{attrs:{id:"_12-minus和intersect区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-minus和intersect区别"}},[t._v("#")]),t._v(" 12. minus和intersect区别")]),t._v(" "),s("ol",[s("li",[t._v("MINUS: 在第一个查询中但不在后面查询中的行，不包括重复行。 按第1 个查询的第 1 列升序排列。")]),t._v(" "),s("li",[t._v("INTERSECT:取每一个查询结果的交集。 不包括重复行。 按第1 个查询的第 1 列升序排列。")])]),t._v(" "),s("h4",{attrs:{id:"_13-什么是存储过程-优点是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-什么是存储过程-优点是什么"}},[t._v("#")]),t._v(" 13.什么是存储过程，优点是什么？")]),t._v(" "),s("p",[t._v("存储过程就像我们编程语言中的函数一样，封装了我们的代码(PLSQL、T-SQL)。存储过程的优点：")]),t._v(" "),s("ul",[s("li",[t._v("能够将代码封装起来保存在数据库之中")]),t._v(" "),s("li",[t._v("让编程语言进行调用")]),t._v(" "),s("li",[t._v("存储过程是一个预编译的代码块，执行效率比较高\n一个存储过程替代大量T_SQL语句 ，可以降低网络通信量，提高通信速率")])]),t._v(" "),s("h4",{attrs:{id:"_14-什么是三范式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-什么是三范式"}},[t._v("#")]),t._v(" 14.什么是三范式")]),t._v(" "),s("ul",[s("li",[t._v("第一范式：字段是最小的的单元不可再分")]),t._v(" "),s("li",[t._v("第二范式：满足第一范式,表中的字段必须完全依赖于全部主键而非部分主键。")]),t._v(" "),s("li",[t._v("第三范式：满足第二范式，非主键外的所有字段必须互不依赖既不存在传递依赖")])]),t._v(" "),s("h4",{attrs:{id:"_15-什么是视图-以及视图的使用场景有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-什么是视图-以及视图的使用场景有哪些"}},[t._v("#")]),t._v(" 15.什么是视图？以及视图的使用场景有哪些？")]),t._v(" "),s("ul",[s("li",[t._v("视图是一种基于数据表的一种虚表")]),t._v(" "),s("li",[t._v("视图建立在已有表的基础上, 视图赖以建立的这些表称为基表")]),t._v(" "),s("li",[t._v("向视图提供数据内容的语句为 SELECT 语句,可以将视图理解为存储起来的 SELECT 语句")]),t._v(" "),s("li",[t._v("视图向用户提供基表数据的另一种表现形式")]),t._v(" "),s("li",[t._v("视图没有存储真正的数据，真正的数据还是存储在基表中")]),t._v(" "),s("li",[t._v("程序员虽然操作的是视图，但最终视图还会转成操作基表")]),t._v(" "),s("li",[t._v("一个基表可以有0个或多个视图")])]),t._v(" "),s("h4",{attrs:{id:"_16-索引是什么-有什么作用以及优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-索引是什么-有什么作用以及优缺点"}},[t._v("#")]),t._v(" 16.索引是什么？有什么作用以及优缺点？")]),t._v(" "),s("ol",[s("li",[t._v("是一种快速查询表中内容的机制，类似于新华字典的目录")]),t._v(" "),s("li",[t._v("运用在表中某个些字段上，但存储时，独立于表之外")])]),t._v(" "),s("p",[t._v("优缺点：")]),t._v(" "),s("ul",[s("li",[t._v("索引加快数据库的检索速度")]),t._v(" "),s("li",[t._v("索引降低了插入、删除、修改等维护任务的速度(虽然索引可以提高查询速度，但是它们也会导致数据库系统更新数据的性能下降，因为大部分数据更新需要同时更新索引)")]),t._v(" "),s("li",[t._v("唯一索引可以确保每一行数据的唯一性，通过使用索引，可以在查询的过程中使用优化隐藏器，提高系统的性能")]),t._v(" "),s("li",[t._v("索引需要占物理和数据空间")])]),t._v(" "),s("h4",{attrs:{id:"_17-数据库的乐观锁和悲观锁是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-数据库的乐观锁和悲观锁是什么"}},[t._v("#")]),t._v(" 17.数据库的乐观锁和悲观锁是什么？")]),t._v(" "),s("p",[t._v("确保在多个事务同时存取数据库中同一数据时不破坏事务的隔离性和统一性以及数据库的统一性，乐观锁和悲观锁是并发控制主要采用的技术手段。")]),t._v(" "),s("ul",[s("li",[t._v("悲观锁：假定会发生并发冲突，屏蔽一切可能违反数据完整性的操作.在查询数据的时候就把事务锁起来，直到提交事务.实现方式：使用数据库中的锁机制。")])]),t._v(" "),s("p",[t._v("执行select xxx for update操作时，数据会被锁定，只有执行commit或rollback才会释放.执行select xxx for update nowait操作时，数据也会被锁定，其他人访问时或返回ORA-00054错误，内容是资源正忙，需要采取相应的业务措施进行处理。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("乐观锁：假设不会发生并发冲突，只在提交操作时检查是否违反数据完整性。在修改数据的时候把事务锁起来，通过version的方式来进行锁定.实现方式：使用version版本或者时间戳.")]),t._v(" "),s("ol",[s("li",[t._v("在数据取得的时候把整个数据都copy到应用中，在进行提交的时候比对当前数据库中的数据和开始的时候更新前取得的数据。当发现两个数据一模一样以后，就表示没有冲突可以提交，否则就是并发冲突，需要去用业务逻辑进行解决。")]),t._v(" "),s("li",[t._v("新增一个Table的Column，这个column是采用timestamp型，存储数据最后更新的时间。这种Timestamp的数据精度在Oracle的时间类型中是最高的，精确到微秒，是在更新提交的时候检查当前数据库中数据的时间戳和自己更新前取到的时间戳进行对比，如果一致则OK，否则就是版本冲突。")])])])]),t._v(" "),s("h4",{attrs:{id:"_18-数据库结构优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-数据库结构优化"}},[t._v("#")]),t._v(" 18.数据库结构优化")]),t._v(" "),s("ol",[s("li",[t._v("范式优化：比如消除冗余（节省空间）")]),t._v(" "),s("li",[t._v("反范式优化：比如适当加冗余等（减少join）")]),t._v(" "),s("li",[t._v("拆分表： 垂直拆分和水平拆分")])]),t._v(" "),s("h4",{attrs:{id:"_19-解释oralce中的游标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-解释oralce中的游标"}},[t._v("#")]),t._v(" 19.解释oralce中的游标")]),t._v(" "),s("p",[t._v("游标就是指向一个结果集的记录定位器（指示器），用于定位记录。游标的使用方式：声明游标，打开游标，提取游标数据，关闭游标")]),t._v(" "),s("div",{staticClass:"language-PlSql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-plsql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Declare")]),t._v("\n \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cursor")]),t._v(" cur "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" category"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("record")]),t._v(" category"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("rowtype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("loop")]),t._v("\n \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fetch")]),t._v(" cur "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("record")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("notfound "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n      dbms_output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("put_line"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to_char"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("record")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("record")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("loop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("close")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_20-描述oracle中的触发器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-描述oracle中的触发器"}},[t._v("#")]),t._v(" 20.描述oracle中的触发器")]),t._v(" "),s("p",[t._v("触发器是一种特殊的存储过程，存储过程由用户显式调用，而触发器是当用户对表")]),t._v(" "),s("p",[t._v("进行update,delete,insert是自动调用。触发器类型通常包括（插入，删除，修改）")]),t._v(" "),s("div",{staticClass:"language-PlSql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-plsql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OR")]),t._v(" REPLACE TRIGGER SAL_EMP\n BEFORE "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" scott"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EMP\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" EACH "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROW")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OLD")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SAL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("NEW")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SAL "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n  DBMS_OUTPUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PUT_LINE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'工资减少'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSIF")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OLD")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SAL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("NEW")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SAL "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n  DBMS_OUTPUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PUT_LINE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'工资增加'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v("\n  DBMS_OUTPUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PUT_LINE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'工资未作任何变动'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n DBMS_OUTPUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PUT_LINE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'更新前工资 ：'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OLD")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SAL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n DBMS_OUTPUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PUT_LINE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'更新后工资 ：'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("NEW")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SAL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_21-使用oracle-伪列删除表中重复记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-使用oracle-伪列删除表中重复记录"}},[t._v("#")]),t._v(" 21. 使用oracle 伪列删除表中重复记录")]),t._v(" "),s("p",[t._v("delete  table  t  where t.rowid not in")]),t._v(" "),s("p",[t._v("(select  max(t1.rowid)  from  table1 t1 where  t1.name=t.name)")]),t._v(" "),s("p",[t._v("根据表结构scott.emp如下图:\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/87850cf02fef43c49e7e8fd6ec9178ec.png",alt:"数据表结构图"}})]),t._v(" "),s("h4",{attrs:{id:"_22-列出所有员工的姓名及其直接上级的姓名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-列出所有员工的姓名及其直接上级的姓名"}},[t._v("#")]),t._v(" 22.列出所有员工的姓名及其直接上级的姓名")]),t._v(" "),s("p",[t._v("分析：表自映射，为表起别名，进行关联  t1 表模拟员工表 t2 表保存直接上级信息`")]),t._v(" "),s("div",{staticClass:"language-SQL extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename 员工姓名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename 直接上级 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("emp t2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MGR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("empno"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_23-列出受雇日期早于其直接上级的所有员工"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-列出受雇日期早于其直接上级的所有员工"}},[t._v("#")]),t._v(" 23.列出受雇日期早于其直接上级的所有员工")]),t._v(" "),s("div",{staticClass:"language-Sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hiredate "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("emp t2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MGR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("empno "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hiredate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hiredate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_24-列出最低薪金大于1500的各种工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-列出最低薪金大于1500的各种工作"}},[t._v("#")]),t._v(" 24.列出最低薪金大于1500的各种工作")]),t._v(" "),s("p",[t._v("分析：工作的最低薪金 —- 按工作分组，求最低薪金")]),t._v(" "),s("div",{staticClass:"language-Sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("大于1500 是一个分组条件 — having")]),t._v(" "),s("div",{staticClass:"language-Sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" job "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("having")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_25-列出所有员工的年工资-按年薪从低到高排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-列出所有员工的年工资-按年薪从低到高排序"}},[t._v("#")]),t._v(" 25.列出所有员工的年工资,按年薪从低到高排序")]),t._v(" "),s("div",{staticClass:"language-Sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" ename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" sal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("asc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_26-列出与-scott-从事相同工作的所有员工"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-列出与-scott-从事相同工作的所有员工"}},[t._v("#")]),t._v(" 26.列出与“SCOTT”从事相同工作的所有员工")]),t._v(" "),s("p",[t._v("分析：先用子查询查出SCOTT的工作 : "),s("code",[t._v("select job from emp where ename =’SCOTT';")])]),t._v(" "),s("div",{staticClass:"language-SQl extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" ename "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" ‘SCOTT’ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" job "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" job "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" ename "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("’SCOTT’"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_27-删除10号部门薪水最高的员工"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-删除10号部门薪水最高的员工"}},[t._v("#")]),t._v(" 27.删除10号部门薪水最高的员工")]),t._v(" "),s("div",{staticClass:"language-Sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" deptno"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" sal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" sal "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" deptno"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MYSQL 不支持")]),t._v("\n")])])]),s("p",[t._v("Mysql 规范，修改或者删除 表中记录，不允许在子查询中 查询相同表\nmysql解决方案：临时表")]),t._v(" "),s("div",{staticClass:"language-Sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" deptno"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" sal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sal "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" sal "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" deptno"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_28-将薪水最高的员工的薪水降30"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-将薪水最高的员工的薪水降30"}},[t._v("#")]),t._v(" 28.将薪水最高的员工的薪水降30%")]),t._v(" "),s("p",[t._v("oracle：")]),t._v(" "),s("div",{staticClass:"language-Sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" sal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.7")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" sal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("mysql:")]),t._v(" "),s("div",{staticClass:"language-Sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" sal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.7")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" sal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maxsal  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" maxsal "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_29-示出薪水最高人的职位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-示出薪水最高人的职位"}},[t._v("#")]),t._v(" 29.示出薪水最高人的职位")]),t._v(" "),s("div",{staticClass:"language-Sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" job "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" sal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" job "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" sal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" sal "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_30-查询员工姓名-工资和-工资级别-工资-3000-为3级-工资-2000-为2级-工资-2000-为1级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-查询员工姓名-工资和-工资级别-工资-3000-为3级-工资-2000-为2级-工资-2000-为1级"}},[t._v("#")]),t._v(" 30.查询员工姓名，工资和 工资级别(工资>=3000 为3级，工资>2000 为2级，工资<=2000 为1级)")]),t._v(" "),s("p",[t._v("分析：")]),t._v(" "),s("p",[t._v("select ename,sal, case when sal>=3000 then ‘3级’ when sal>2000 then ‘2级’ else ‘1级’ end 级别 from emp;")]),t._v(" "),s("h4",{attrs:{id:"_31-行列互换-与语法-case-when-then-when-then-else-end"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-行列互换-与语法-case-when-then-when-then-else-end"}},[t._v("#")]),t._v(" 31.行列互换 与语法：case … when … then … when … then … else … end")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("姓名")]),t._v(" "),s("th",[t._v("课程")]),t._v(" "),s("th",[t._v("分数")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("张三")]),t._v(" "),s("td",[t._v("语文")]),t._v(" "),s("td",[t._v("74")])]),t._v(" "),s("tr",[s("td",[t._v("张三")]),t._v(" "),s("td",[t._v("数学")]),t._v(" "),s("td",[t._v("83")])]),t._v(" "),s("tr",[s("td",[t._v("张三")]),t._v(" "),s("td",[t._v("物理")]),t._v(" "),s("td",[t._v("93")])]),t._v(" "),s("tr",[s("td",[t._v("李四")]),t._v(" "),s("td",[t._v("语文")]),t._v(" "),s("td",[t._v("74")])]),t._v(" "),s("tr",[s("td",[t._v("李四")]),t._v(" "),s("td",[t._v("数学")]),t._v(" "),s("td",[t._v("84")])]),t._v(" "),s("tr",[s("td",[t._v("李四")]),t._v(" "),s("td",[t._v("物理")]),t._v(" "),s("td",[t._v("94")])])])]),t._v(" "),s("p",[t._v("变成(得到如下结果)：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("姓名")]),t._v(" "),s("th",[t._v("语文")]),t._v(" "),s("th",[t._v("数学")]),t._v(" "),s("th",[t._v("物理")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("李四")]),t._v(" "),s("td",[t._v("74")]),t._v(" "),s("td",[t._v("84")]),t._v(" "),s("td",[t._v("94")])]),t._v(" "),s("tr",[s("td",[t._v("张三")]),t._v(" "),s("td",[t._v("74")]),t._v(" "),s("td",[t._v("83")]),t._v(" "),s("td",[t._v("93")])])])]),t._v(" "),s("div",{staticClass:"language-Sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" cource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("’语文’ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" score "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" scores "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" cource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("’语文’ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" score "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  语文"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" cource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("’数学’ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" score "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 数学"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" cource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("’英语’ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" score "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 英语  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" scores "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_32-oracle中的分页"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-oracle中的分页"}},[t._v("#")]),t._v(" 32. Oracle中的分页")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("使用rownum函数")]),t._v(" "),s("div",{staticClass:"language-Sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ROWNUM "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" rowno"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" tmp t  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),t._v("\n                   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" r\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" ROWNUM "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" page"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("size\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" a\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rowno "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("page"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("size\n")])])])]),t._v(" "),s("li",[s("p",[t._v("使用row_number()over()函数")]),t._v(" "),s("div",{staticClass:"language-Sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("row_number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("over")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" num\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("page"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("size "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" page"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("size\n")])])])])]),t._v(" "),s("h4",{attrs:{id:"_33-一个叫department的表-里面只有一个字段name-一共有4条纪录-分别是a-b-c-d-对应四个球对-现在四个球对进行比赛-用一条sql语句显示所有可能的比赛组合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-一个叫department的表-里面只有一个字段name-一共有4条纪录-分别是a-b-c-d-对应四个球对-现在四个球对进行比赛-用一条sql语句显示所有可能的比赛组合"}},[t._v("#")]),t._v(" 33.一个叫department的表，里面只有一个字段name,一共有4条纪录，分别是a,b,c,d,对应四个球对，现在四个球对进行比赛，用一条sql语句显示所有可能的比赛组合")]),t._v(" "),s("div",{staticClass:"language-Sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" team a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" team b\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);