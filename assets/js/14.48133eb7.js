(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{339:function(t,e,a){"use strict";a.r(e);var v=a(7),s=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("tomcat\nWeblogic\nJBOSS\nColdfusion\nWebsphere\nGlassFish")]),t._v(" "),e("p",[t._v("一般本地开发的话建议使用tomcat。")]),t._v(" "),e("p",[t._v("linux系统建议使用jetty或apache hpptd")]),t._v(" "),e("p",[t._v("大型的项目就用JBOSS或webloigc")]),t._v(" "),e("p",[t._v("小项目，或者是个人开发tomcat 大项目或者商业项目一般采用：weblgoic/webshere\n其他的还有jboss、glasshfish等\n一些示例项目或者小项目常采用jetty\ntomcat , jboss, weblogic, websphere 一般项目tomcat就可以了")]),t._v(" "),e("h2",{attrs:{id:"tomcat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tomcat"}},[t._v("#")]),t._v(" tomcat")]),t._v(" "),e("p",[t._v("Tomcat是Sun的JSWDK(JavaServer Web Development Kit)中Servlet的运行环境(servlet容器)。Tomcat是Apache Jakarta软件组织的一个子项目，Tomcat是一个JSP/Servlet容器，它是在SUN公司的JSWDK（Java Server Web Development Kit）基础上发展起来的一个JSP和Servlet规范的标准实现，使用Tomcat可以体验JSP和Servlet的最新规范。经过多年的发展，Tomcat不仅是JSP和Servlet规范的标准实现，而且具备了很多商业Java Servlet容器的特性，并被一些企业用于商业用途。")]),t._v(" "),e("h2",{attrs:{id:"jboss等"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jboss等"}},[t._v("#")]),t._v(" JBOSS等")]),t._v(" "),e("p",[t._v("JBoss是一个运行EJB的J2EE应用服务器。它是开放源代码的项目，遵循最新的J2EE规范。从JBoss项目开始至今，它已经从一个EJB容器发展成为一个基于的J2EE的一个web 操作系统（operating system for web），它体现了J2EE规范中最新的技术")]),t._v(" "),e("p",[t._v("WebLogic服务器是企业级的应用服务器，支持EJB, 集群以及 ERP（企业资源计划）的连通性 ，开发公司：BEA。")]),t._v(" "),e("p",[t._v("WebSphere产品系列是IBM公司一套典型的电子商务应用开发工具及运行环境")]),t._v(" "),e("h2",{attrs:{id:"中间件的概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#中间件的概念"}},[t._v("#")]),t._v(" 中间件的概念")]),t._v(" "),e("ul",[e("li",[t._v("1.Java中间件的定义")])]),t._v(" "),e("p",[t._v("在Java web开发的演进与进化中，我们对于消息系统，数据库，服务化接口的抽象等，涉及数据分离的过程中，在分离过程中，就会涉及到分离后系统间，数据库间的交互。java中间件就是处理我们数据间交互，连接数据分离后两个系统间的通信，中间件不属于任何一个开发项目，就是让我们对应系统间或者数据库间数据流通无感知。有点像Linux下的管道。")]),t._v(" "),e("ul",[e("li",[t._v("2.中间件应用的基本领域与代表")])]),t._v(" "),e("p",[t._v("上面说到java是数据间的中间件，在java web开发中适用的范围主要应该是下面三个领域：")]),t._v(" "),e("h2",{attrs:{id:"远程过程调用和对象访问中间件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#远程过程调用和对象访问中间件"}},[t._v("#")]),t._v(" 远程过程调用和对象访问中间件")]),t._v(" "),e("p",[t._v("主要解决分布式环境下应用的互相访问问题，这也是支撑应用服务化功能的基础；\n例如：RPC：Remote Process Call（远程过程调用中间件）\n消息中间件：解决应用之间的消息传递、解耦、异步的问题。\n例如：ActiveMQ 是Apache出品，最流行的，能力强劲的开源消息总线。ActiveMQ 是一个完全支持JMS1.1和J2EE 1.4规范的 JMS Provider实现。")]),t._v(" "),e("h2",{attrs:{id:"数据访问中间件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据访问中间件"}},[t._v("#")]),t._v(" 数据访问中间件")]),t._v(" "),e("p",[t._v("主要解决应用访问数据库的共性问题的组件\n例如：数据访问中间间就是我们使用数据库指定的数据驱动，例如：ODBC JDBC，以 JDBC 为例，数据库本地维护了一个数据访问中间件，我们在访问数据库的时候，配置的地址其实是直接连接到JDBC这个数据访问中间件，如果我们执行查询数据，或者对数据库的操作都是通过JDBC来连接数据库，然后通过JDBC查询完成数据库以后再返回给我们应用程序。作为中间件，查询过程对于我们是不可知的。")])])}),[],!1,null,null,null);e.default=s.exports}}]);