(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{340:function(t,a,i){"use strict";i.r(a);var v=i(7),o=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("本文收集自网络")])]),t._v(" "),a("h3",{attrs:{id:"什么是工作流-worklow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是工作流-worklow"}},[t._v("#")]),t._v(" 什么是工作流(Worklow)")]),t._v(" "),a("p",[t._v("工作流是对工作流程及其各操作步骤之间业务规则的抽象、概括描述。工作流建模，即将工作流程中的工作如前后组织在一起的逻辑和规则，在计算机中以恰当的模型表逢并对其实施计算。工作流要解决的主要问题是: 为实现某个业务目标，利用计算机在多个参与者之间按某种预定规则自动传递文档、信息或者任务。")]),t._v(" "),a("p",[t._v("那么再简单点说，我认为工作流就是对业务的流程化抽象,WFMC给出了工作流参考模型如下:\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/4079ddbe7db64f46b0de80852b2ac2a0.png",alt:"工作流参考模型"}})]),t._v(" "),a("h3",{attrs:{id:"工作流应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作流应用场景"}},[t._v("#")]),t._v(" 工作流应用场景")]),t._v(" "),a("p",[t._v("具体场景，凡是涉及到业务流程的所有场景")]),t._v(" "),a("ul",[a("li",[t._v("关键业务流程:订单、报价处理、合同审核、客户电话处理、供应链管理等。行政管理类:出差申请、加班申请、请假申请、用车申请、各种办公用品申请、购买申请、日报周报等凡是原来手工流转处理的行政表单。。人事管理类:员工培训安排、绩效考评、职位变动处理、员工档案信息管理等。财务相关类:付款请求、应收款处理、日常报销处理、出差报销、预算和计划申请等.。客户服务类:客户信息管理、客户投诉、请求处理、售后服务管理等。")])]),t._v(" "),a("h3",{attrs:{id:"工作流实现方式目前常见的工作流程有两种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作流实现方式目前常见的工作流程有两种方式"}},[t._v("#")]),t._v(" 工作流实现方式目前常见的工作流程有两种方式")]),t._v(" "),a("ul",[a("li",[t._v("通过状态字段实现流程控制。原始，适合简单流程控制。")]),t._v(" "),a("li",[t._v("工作流引擎实现流程控制。适用场景更广泛，扩展性更好")])]),t._v(" "),a("h3",{attrs:{id:"有哪些工作流框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有哪些工作流框架"}},[t._v("#")]),t._v(" 有哪些工作流框架?")]),t._v(" "),a("p",[t._v("目前市面上主流的开源流程引擎主要有 Activiti、Flowable,CamundajBPM,jflow, oworkflow等。现在我们对这些开源流程框架进行调研和分析。")]),t._v(" "),a("h4",{attrs:{id:"_1-activiti"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-activiti"}},[t._v("#")]),t._v(" 1.Activiti")]),t._v(" "),a("p",[t._v("Activiti 由 Alfresco 公司开发，目前最高版本为 Activiti cloud 71.0")]),t._v(" "),a("p",[t._v("其中 activiti5 和 activiti6 的核心 leader 是 Tijs Rademakers，由于团队内部分歧，2017 年 Tijs Rademakers 离开团队，创建了后来的 Flowable。activiti6 以及 activiti5 代码则交接给 Salabov 团队维护，activiti6 以及 activiti5 的代码官方已经暂停维护。往后 Salaboy 团开发了 activiti7 框架，ativiti7 内核使用的还是 activiti6，并没有为引擎注入更多的新特性，只是在 Activiti 之外的上层封装了些应用。")]),t._v(" "),a("p",[t._v("直到 Activiti cloud710版本，Activiti coud 将系统分为 Runtime Bundle、 Audit Service  Query Service、 CloudConnectors、Application Service、 Notification Service。这些工作的主要目的其实就是为了上云，减少对 Activiti 依赖的糖合，需要使用Activiti的系统只需要通过调用 http 接口的方式来实现工作流能力的整合，将工作流业务托管上云")]),t._v(" "),a("h4",{attrs:{id:"_2-flowable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-flowable"}},[t._v("#")]),t._v(" 2.Flowable")]),t._v(" "),a("p",[t._v("Flowable是基于activiti6 衍生出来的版本，目前最新版本是v6.7.0")]),t._v(" "),a("p",[t._v("开发团队是从Activiti 中分裂出来的，修复了一众activiti6 的 bug，并在其基础上实现了 DMN 支持，BPEL 支持等。")]),t._v(" "),a("p",[t._v("相对开源版，其商业版的功能会更强大。Flowable 是一个使用Java 编写的轻量级业务流程引擎，使用 Apache V2 license 协议开源。2016年10月，Activiti工作流擎的主要开发者离开 Alfresco 公司并在 Activiti分支基础上开启了 Flowable 开源项目。Flowable 项目中包括 BPMN (Business Process Model and Notation)引擎CMMN (Case Management Modeland Notation)引擎、DMN (Decision Model and Notation) 引擎和表单引擎 (Form Engine) 等模块。")]),t._v(" "),a("h4",{attrs:{id:"_3-camunda"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-camunda"}},[t._v("#")]),t._v(" 3.Camunda")]),t._v(" "),a("p",[t._v("Camunda 基于activiti5，所以其保留了 PVM，最新版本Camunda7.17，开发团队也是从activiti 中分裂出来的，发展轨与Flowable 相似。")]),t._v(" "),a("p",[t._v("通过压力测试验证 Camunda BPMN 引擎性能和稳定性更好。功能比较完善，除了BPMN，Camunda 还支持 CMMN(案例管理)和 DMN (决策自动化)。Camunda 不仅带有引擎，还带有非常强大的工具[6]，用于建模、任务管理、操作监控和用户管理")]),t._v(" "),a("h4",{attrs:{id:"_4-jbpm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-jbpm"}},[t._v("#")]),t._v(" 4.jBPM")]),t._v(" "),a("p",[t._v("BPM 由JBoss 公司开发，目前最高版本 7.61.0.Final，不过从BPM5开始已经限之前不是同一个产品了，BPM5 的代码基础不是jBPM4，而是从 Drools Flow 重新开始，基于 Drools Flow 技术在国内市场上用的很少,jBPM4 诞生的比较早，后来jBPM4创建者 Tom Baeyens 离开JBoss 后，加入 Alfresco 后很快推出了新的基于jBPM4 的开源工作流系统 Activiti，另外jBPM 以Hibernate 作为数据持久化 ORM，而 Hibernate 也已不是主流技术mikechen的互联网架松首页架构视频技术文章面试题库问答社区。")]),t._v(" "),a("h4",{attrs:{id:"_5-jflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-jflow"}},[t._v("#")]),t._v(" 5.JFlow")]),t._v(" "),a("p",[t._v("Jflow是一个国产的开源工作流引擎，与业务场景结合紧密，再带表单引擎，数据表较多，中文概念较多，可配置型性强，支持作为中间件模式的集成。配置点集中在，节点属性，流程属性，方向条件。概念名词比较清晰，文档全面。有qq群技术支持。")]),t._v(" "),a("p",[t._v("流程设计器界面干净，从节点类型分类，分流，合流，分合流，子线程等等。表单与流程完美结合，与其它几款流程引擎设计理念不同。Jflow更适用，贴近用户操作。")]),t._v(" "),a("p",[t._v("表单引擎中的精华是审核组件，满足国内审批要求的需求，退回，分合流审核，会签，并行处理，队列处理，概念清晰，容易理解。")]),t._v(" "),a("h4",{attrs:{id:"_6-osworkflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-osworkflow"}},[t._v("#")]),t._v(" 6.osworkflow")]),t._v(" "),a("p",[t._v("是一个轻量化的流程引擎，基于状态机机制，数据库表很少，osworkflow 提供的工作流构成元素有: 步骤(step) 、条件(conditions) 、循环(loops) 、分支(spilts) 、合并 joins)等，但不支持会签、跳转、退回、加签等这些操作，需要自己扩展开发，有一定难度。如果流程比较简单，osworkflow 是很好的选择")])])}),[],!1,null,null,null);a.default=o.exports}}]);